-- Create a query plan
EXPLAIN ANALYZE SELECT players_tournaments.id, players.player_position, players.first_name, players.last_name, nations.name,
      teams.full_name, leagues.name
      FROM players_tournaments
      INNER JOIN players ON (players_tournaments.player_id = players.id)
      INNER JOIN teams_tournaments ON (players_tournaments.teams_tournament_id = teams_tournaments.id)
      INNER JOIN tournaments ON (teams_tournaments.tournament_id = tournaments.id)
      INNER JOIN leagues ON (tournaments.league_id = leagues.id)
      INNER JOIN nations ON (players.nation_id = nations.id)
      INNER JOIN teams ON (teams_tournaments.team_id = teams.id)
WHERE tournaments.season_id = 2012 AND tournaments.league_id = 14
ORDER BY full_name, player_order;

QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214.95..215.07 rows=51 width=61) (actual time=11.839..11.895 rows=270 loops=1)
   Sort Key: teams.full_name, players.player_order
   Sort Method: quicksort  Memory: 62kB
   ->  Hash Join  (cost=35.04..213.50 rows=51 width=61) (actual time=1.962..10.501 rows=270 loops=1)
         Hash Cond: (players.nation_id = nations.id)
         ->  Nested Loop  (cost=33.63..211.93 rows=51 width=58) (actual time=1.790..9.814 rows=270 loops=1)
               ->  Seq Scan on leagues  (cost=0.00..1.20 rows=1 width=21) (actual time=0.031..0.036 rows=1 loops=1)
                     Filter: (id = 14)
                     Rows Removed by Filter: 15
               ->  Nested Loop  (cost=33.63..210.22 rows=51 width=45) (actual time=1.753..9.616 rows=270 loops=1)
                     ->  Hash Join  (cost=33.35..194.46 rows=51 width=27) (actual time=1.710..6.376 rows=270 loops=1)
                           Hash Cond: (players_tournaments.teams_tournament_id = teams_tournaments.id)
                           ->  Seq Scan on players_tournaments  (cost=0.00..129.36 rows=8336 width=12) (actual time=0.021..2.408 rows=8336 loops=1)
                           ->  Hash  (cost=33.25..33.25 rows=8 width=23) (actual time=1.388..1.394 rows=30 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Nested Loop  (cost=3.63..33.25 rows=8 width=23) (actual time=0.241..1.331 rows=30 loops=1)
                                       ->  Hash Join  (cost=3.49..31.86 rows=8 width=12) (actual time=0.195..1.022 rows=30 loops=1)
                                             Hash Cond: (teams_tournaments.tournament_id = tournaments.id)
                                             ->  Seq Scan on teams_tournaments  (cost=0.00..24.69 rows=1369 width=12) (actual time=0.019..0.480 rows=1369 loops=1)
                                             ->  Hash  (cost=3.48..3.48 rows=1 width=8) (actual time=0.070..0.071 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on tournaments  (cost=0.00..3.48 rows=1 width=8) (actual time=0.025..0.056 rows=1 loops=1)
                                                         Filter: ((league_id = 14) AND (season_id = 2012))
                                                         Rows Removed by Filter: 164
                                       ->  Index Scan using teams_pkey on teams  (cost=0.14..0.17 rows=1 width=19) (actual time=0.007..0.007 rows=1 loops=30)
                                             Index Cond: (id = teams_tournaments.team_id)
                     ->  Index Scan using players_pkey on players  (cost=0.28..0.31 rows=1 width=26) (actual time=0.009..0.009 rows=1 loops=270)
                           Index Cond: (id = players_tournaments.player_id)
         ->  Hash  (cost=1.18..1.18 rows=18 width=11) (actual time=0.079..0.080 rows=18 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nations  (cost=0.00..1.18 rows=18 width=11) (actual time=0.024..0.032 rows=18 loops=1)
 Planning Time: 9.237 ms
 Execution Time: 12.647 ms
(33 rows)

-- Create indexes for foreign keys
CREATE INDEX players_tournaments_player_id_fk ON players_tournaments (player_id);
CREATE INDEX players_tournaments_teams_tournament_id_fk ON players_tournaments (teams_tournament_id);
CREATE INDEX teams_tournaments_tournament_id_fk ON teams_tournaments (tournament_id);
CREATE INDEX teams_tournaments_team_id_fk ON teams_tournaments (team_id);
CREATE INDEX tournaments_league_id_fk ON tournaments (league_id);
CREATE INDEX players_nation_id_fk ON players (nation_id);
-- Create indexes for filterable columns
CREATE INDEX tournaments_season_id_fk ON tournaments (season_id);
-- Create indexes for orderable columns
CREATE INDEX teams_full_name_idx ON teams (full_name);
CREATE INDEX players_player_order_idx ON players (player_order);

-- Ð¡reate an optimized query plan
QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=38.83..38.96 rows=51 width=61) (actual time=6.308..6.357 rows=270 loops=1)
   Sort Key: teams.full_name, players.player_order
   Sort Method: quicksort  Memory: 62kB
   ->  Hash Join  (cost=2.39..37.38 rows=51 width=61) (actual time=0.227..5.123 rows=270 loops=1)
         Hash Cond: (players.nation_id = nations.id)
         ->  Nested Loop  (cost=0.99..35.81 rows=51 width=58) (actual time=0.144..4.491 rows=270 loops=1)
               ->  Nested Loop  (cost=0.71..20.06 rows=51 width=40) (actual time=0.124..1.500 rows=270 loops=1)
                     ->  Nested Loop  (cost=0.42..14.58 rows=8 width=36) (actual time=0.107..0.580 rows=30 loops=1)
                           ->  Nested Loop  (cost=0.28..13.18 rows=8 width=25) (actual time=0.091..0.219 rows=30 loops=1)
                                 ->  Nested Loop  (cost=0.00..4.68 rows=1 width=21) (actual time=0.062..0.099 rows=1 loops=1)
                                       ->  Seq Scan on tournaments  (cost=0.00..3.48 rows=1 width=8) (actual time=0.043..0.073 rows=1 loops=1)
                                             Filter: ((league_id = 14) AND (season_id = 2012))
                                             Rows Removed by Filter: 164
                                       ->  Seq Scan on leagues  (cost=0.00..1.20 rows=1 width=21) (actual time=0.015..0.020 rows=1 loops=1)
                                             Filter: (id = 14)
                                             Rows Removed by Filter: 15
                                 ->  Index Scan using teams_tournaments_tournament_id_fk on teams_tournaments  (cost=0.28..8.42 rows=8 width=12) (actual time=0.025..0.075 rows=30 loops=1)
                                       Index Cond: (tournament_id = tournaments.id)
                           ->  Index Scan using teams_pkey on teams  (cost=0.14..0.17 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=30)
                                 Index Cond: (id = teams_tournaments.team_id)
                     ->  Index Scan using players_tournaments_teams_tournament_id_fk on players_tournaments  (cost=0.29..0.61 rows=7 width=12) (actual time=0.008..0.022 rows=9 loops=30)
                           Index Cond: (teams_tournament_id = teams_tournaments.id)
               ->  Index Scan using players_pkey on players  (cost=0.28..0.31 rows=1 width=26) (actual time=0.008..0.008 rows=1 loops=270)
                     Index Cond: (id = players_tournaments.player_id)
         ->  Hash  (cost=1.18..1.18 rows=18 width=11) (actual time=0.067..0.068 rows=18 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nations  (cost=0.00..1.18 rows=18 width=11) (actual time=0.013..0.021 rows=18 loops=1)
 Planning Time: 4.926 ms
 Execution Time: 6.612 ms
(29 rows)
